CREATE TABLE
CREATE INDEX
=== Plan ===
p4 = projection                         
  : columns (id, name, country)
  j3 = nested loop join
    i0 = scan index (tbl.ix_tbl_name)
    p2 = projection
      : columns (id, country)
      t1 = rowid lookup (tbl)
        : rowid (i0[0])

=== Program ===
[
  cursor_index_scan_ix_tbl_name
  cursor_row_id_tbl
  once_row_id_tbl
  nested_loop_need_outer
] {
  CONST.I 1
  STORE S3_nested_loop_need_outer
  CUR.OPEN.RI tbl.ix_tbl_name
  CUR.FIRST
  STORE S0_cursor_index_scan_ix_tbl_name
  CUR.OPEN.RT tbl
  STORE S1_cursor_row_id_tbl
  CONST.I 0
  STORE S2_once_row_id_tbl
L0_loop_start:
  CONST.I 1
  LOAD S3_nested_loop_need_outer
  J.NOTEQUAL L2_nested_loop_inner_start
  LOAD S0_cursor_index_scan_ix_tbl_name
  CUR.NEXT L1_loop_done
  STORE S0_cursor_index_scan_ix_tbl_name
  CONST.I 0
  LOAD S3_nested_loop_need_outer
  CONST.I 0
  STORE S2_once_row_id_tbl
L2_nested_loop_inner_start:
  CONST.I 1
  LOAD S2_once_row_id_tbl
  J.EQUAL L3_nested_loop_inner_end
  CONST.I 1
  STORE S2_once_row_id_tbl
  LOAD S0_cursor_index_scan_ix_tbl_name
  COL 0
  LOAD S1_cursor_row_id_tbl
  CUR.SEEK.ROWID
  CUR.NEXT L3_nested_loop_inner_end
  STORE S1_cursor_row_id_tbl
  J L4_nested_loop_predicate
L3_nested_loop_inner_end:
  CONST.I 1
  STORE S3_nested_loop_need_outer
  J L0_loop_start
L4_nested_loop_predicate:
  LOAD S1_cursor_row_id_tbl
  COL 0
  LOAD S0_cursor_index_scan_ix_tbl_name
  COL 1
  LOAD S1_cursor_row_id_tbl
  COL 2
  MK.ROW 3
  YIELD
  J L0_loop_start
L1_loop_done:
  FINISH
}
1 | Alan    | GB
2 | Betty   | FR
3 | Charles | DE
4 | Donna   | GR
5 | Emma    | GB
6 | Will    | GB
7 | Yvonne  | AU
