//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\will\Source\Repos\SimpleDatabase\SimpleDatabase.Parsing\Antlr\SQL.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace SimpleDatabase.Parsing.Antlr {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public partial class SQLLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		K_AS=1, K_EXPLAIN=2, K_FROM=3, K_SELECT=4, K_WHERE=5, IDENTIFIER=6, NUMBER_LITERAL=7, 
		STRING_LITERAL=8, COMMA=9, DOT=10, EQUAL=11, NOT=12, SEMI=13, STAR=14, 
		WS=15;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"K_AS", "K_EXPLAIN", "K_FROM", "K_SELECT", "K_WHERE", "IDENTIFIER", "NUMBER_LITERAL", 
		"STRING_LITERAL", "COMMA", "DOT", "EQUAL", "NOT", "SEMI", "STAR", "WS", 
		"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", 
		"O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"
	};


	public SQLLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public SQLLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, null, null, null, "','", "'.'", "'='", 
		"'!'", "';'", "'*'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "K_AS", "K_EXPLAIN", "K_FROM", "K_SELECT", "K_WHERE", "IDENTIFIER", 
		"NUMBER_LITERAL", "STRING_LITERAL", "COMMA", "DOT", "EQUAL", "NOT", "SEMI", 
		"STAR", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "SQL.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static SQLLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x11', '\xC6', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', '\x1A', '\x4', 
		'\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x4', '\x1D', '\t', 
		'\x1D', '\x4', '\x1E', '\t', '\x1E', '\x4', '\x1F', '\t', '\x1F', '\x4', 
		' ', '\t', ' ', '\x4', '!', '\t', '!', '\x4', '\"', '\t', '\"', '\x4', 
		'#', '\t', '#', '\x4', '$', '\t', '$', '\x4', '%', '\t', '%', '\x4', '&', 
		'\t', '&', '\x4', '\'', '\t', '\'', '\x4', '(', '\t', '(', '\x4', ')', 
		'\t', ')', '\x4', '*', '\t', '*', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', 
		'\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', 
		'\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', 
		'\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', 
		'\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', 
		'\x3', '\x6', '\x3', '\a', '\x3', '\a', '\a', '\a', 'u', '\n', '\a', '\f', 
		'\a', '\xE', '\a', 'x', '\v', '\a', '\x3', '\b', '\x6', '\b', '{', '\n', 
		'\b', '\r', '\b', '\xE', '\b', '|', '\x3', '\t', '\x3', '\t', '\x3', '\t', 
		'\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', 
		'\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', 
		'\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', 
		'\x3', '\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', 
		'\x3', '\x13', '\x3', '\x13', '\x3', '\x14', '\x3', '\x14', '\x3', '\x15', 
		'\x3', '\x15', '\x3', '\x16', '\x3', '\x16', '\x3', '\x17', '\x3', '\x17', 
		'\x3', '\x18', '\x3', '\x18', '\x3', '\x19', '\x3', '\x19', '\x3', '\x1A', 
		'\x3', '\x1A', '\x3', '\x1B', '\x3', '\x1B', '\x3', '\x1C', '\x3', '\x1C', 
		'\x3', '\x1D', '\x3', '\x1D', '\x3', '\x1E', '\x3', '\x1E', '\x3', '\x1F', 
		'\x3', '\x1F', '\x3', ' ', '\x3', ' ', '\x3', '!', '\x3', '!', '\x3', 
		'\"', '\x3', '\"', '\x3', '#', '\x3', '#', '\x3', '$', '\x3', '$', '\x3', 
		'%', '\x3', '%', '\x3', '&', '\x3', '&', '\x3', '\'', '\x3', '\'', '\x3', 
		'(', '\x3', '(', '\x3', ')', '\x3', ')', '\x3', '*', '\x3', '*', '\x2', 
		'\x2', '+', '\x3', '\x3', '\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', 
		'\a', '\r', '\b', '\xF', '\t', '\x11', '\n', '\x13', '\v', '\x15', '\f', 
		'\x17', '\r', '\x19', '\xE', '\x1B', '\xF', '\x1D', '\x10', '\x1F', '\x11', 
		'!', '\x2', '#', '\x2', '%', '\x2', '\'', '\x2', ')', '\x2', '+', '\x2', 
		'-', '\x2', '/', '\x2', '\x31', '\x2', '\x33', '\x2', '\x35', '\x2', '\x37', 
		'\x2', '\x39', '\x2', ';', '\x2', '=', '\x2', '?', '\x2', '\x41', '\x2', 
		'\x43', '\x2', '\x45', '\x2', 'G', '\x2', 'I', '\x2', 'K', '\x2', 'M', 
		'\x2', 'O', '\x2', 'Q', '\x2', 'S', '\x2', '\x3', '\x2', '!', '\x5', '\x2', 
		'\x43', '\\', '\x61', '\x61', '\x63', '|', '\x6', '\x2', '\x32', ';', 
		'\x43', '\\', '\x61', '\x61', '\x63', '|', '\x3', '\x2', '\x32', ';', 
		'\x3', '\x2', ')', ')', '\x5', '\x2', '\v', '\f', '\xF', '\xF', '\"', 
		'\"', '\x4', '\x2', '\x43', '\x43', '\x63', '\x63', '\x4', '\x2', '\x44', 
		'\x44', '\x64', '\x64', '\x4', '\x2', '\x45', '\x45', '\x65', '\x65', 
		'\x4', '\x2', '\x46', '\x46', '\x66', '\x66', '\x4', '\x2', 'G', 'G', 
		'g', 'g', '\x4', '\x2', 'H', 'H', 'h', 'h', '\x4', '\x2', 'I', 'I', 'i', 
		'i', '\x4', '\x2', 'J', 'J', 'j', 'j', '\x4', '\x2', 'K', 'K', 'k', 'k', 
		'\x4', '\x2', 'L', 'L', 'l', 'l', '\x4', '\x2', 'M', 'M', 'm', 'm', '\x4', 
		'\x2', 'N', 'N', 'n', 'n', '\x4', '\x2', 'O', 'O', 'o', 'o', '\x4', '\x2', 
		'P', 'P', 'p', 'p', '\x4', '\x2', 'Q', 'Q', 'q', 'q', '\x4', '\x2', 'R', 
		'R', 'r', 'r', '\x4', '\x2', 'S', 'S', 's', 's', '\x4', '\x2', 'T', 'T', 
		't', 't', '\x4', '\x2', 'U', 'U', 'u', 'u', '\x4', '\x2', 'V', 'V', 'v', 
		'v', '\x4', '\x2', 'W', 'W', 'w', 'w', '\x4', '\x2', 'X', 'X', 'x', 'x', 
		'\x4', '\x2', 'Y', 'Y', 'y', 'y', '\x4', '\x2', 'Z', 'Z', 'z', 'z', '\x4', 
		'\x2', '[', '[', '{', '{', '\x4', '\x2', '\\', '\\', '|', '|', '\x2', 
		'\xAD', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x3', 'U', '\x3', 
		'\x2', '\x2', '\x2', '\x5', 'X', '\x3', '\x2', '\x2', '\x2', '\a', '`', 
		'\x3', '\x2', '\x2', '\x2', '\t', '\x65', '\x3', '\x2', '\x2', '\x2', 
		'\v', 'l', '\x3', '\x2', '\x2', '\x2', '\r', 'r', '\x3', '\x2', '\x2', 
		'\x2', '\xF', 'z', '\x3', '\x2', '\x2', '\x2', '\x11', '~', '\x3', '\x2', 
		'\x2', '\x2', '\x13', '\x82', '\x3', '\x2', '\x2', '\x2', '\x15', '\x84', 
		'\x3', '\x2', '\x2', '\x2', '\x17', '\x86', '\x3', '\x2', '\x2', '\x2', 
		'\x19', '\x88', '\x3', '\x2', '\x2', '\x2', '\x1B', '\x8A', '\x3', '\x2', 
		'\x2', '\x2', '\x1D', '\x8C', '\x3', '\x2', '\x2', '\x2', '\x1F', '\x8E', 
		'\x3', '\x2', '\x2', '\x2', '!', '\x92', '\x3', '\x2', '\x2', '\x2', '#', 
		'\x94', '\x3', '\x2', '\x2', '\x2', '%', '\x96', '\x3', '\x2', '\x2', 
		'\x2', '\'', '\x98', '\x3', '\x2', '\x2', '\x2', ')', '\x9A', '\x3', '\x2', 
		'\x2', '\x2', '+', '\x9C', '\x3', '\x2', '\x2', '\x2', '-', '\x9E', '\x3', 
		'\x2', '\x2', '\x2', '/', '\xA0', '\x3', '\x2', '\x2', '\x2', '\x31', 
		'\xA2', '\x3', '\x2', '\x2', '\x2', '\x33', '\xA4', '\x3', '\x2', '\x2', 
		'\x2', '\x35', '\xA6', '\x3', '\x2', '\x2', '\x2', '\x37', '\xA8', '\x3', 
		'\x2', '\x2', '\x2', '\x39', '\xAA', '\x3', '\x2', '\x2', '\x2', ';', 
		'\xAC', '\x3', '\x2', '\x2', '\x2', '=', '\xAE', '\x3', '\x2', '\x2', 
		'\x2', '?', '\xB0', '\x3', '\x2', '\x2', '\x2', '\x41', '\xB2', '\x3', 
		'\x2', '\x2', '\x2', '\x43', '\xB4', '\x3', '\x2', '\x2', '\x2', '\x45', 
		'\xB6', '\x3', '\x2', '\x2', '\x2', 'G', '\xB8', '\x3', '\x2', '\x2', 
		'\x2', 'I', '\xBA', '\x3', '\x2', '\x2', '\x2', 'K', '\xBC', '\x3', '\x2', 
		'\x2', '\x2', 'M', '\xBE', '\x3', '\x2', '\x2', '\x2', 'O', '\xC0', '\x3', 
		'\x2', '\x2', '\x2', 'Q', '\xC2', '\x3', '\x2', '\x2', '\x2', 'S', '\xC4', 
		'\x3', '\x2', '\x2', '\x2', 'U', 'V', '\x5', '!', '\x11', '\x2', 'V', 
		'W', '\x5', '\x45', '#', '\x2', 'W', '\x4', '\x3', '\x2', '\x2', '\x2', 
		'X', 'Y', '\x5', ')', '\x15', '\x2', 'Y', 'Z', '\x5', 'O', '(', '\x2', 
		'Z', '[', '\x5', '?', ' ', '\x2', '[', '\\', '\x5', '\x37', '\x1C', '\x2', 
		'\\', ']', '\x5', '!', '\x11', '\x2', ']', '^', '\x5', '\x31', '\x19', 
		'\x2', '^', '_', '\x5', ';', '\x1E', '\x2', '_', '\x6', '\x3', '\x2', 
		'\x2', '\x2', '`', '\x61', '\x5', '+', '\x16', '\x2', '\x61', '\x62', 
		'\x5', '\x43', '\"', '\x2', '\x62', '\x63', '\x5', '=', '\x1F', '\x2', 
		'\x63', '\x64', '\x5', '\x39', '\x1D', '\x2', '\x64', '\b', '\x3', '\x2', 
		'\x2', '\x2', '\x65', '\x66', '\x5', '\x45', '#', '\x2', '\x66', 'g', 
		'\x5', ')', '\x15', '\x2', 'g', 'h', '\x5', '\x37', '\x1C', '\x2', 'h', 
		'i', '\x5', ')', '\x15', '\x2', 'i', 'j', '\x5', '%', '\x13', '\x2', 'j', 
		'k', '\x5', 'G', '$', '\x2', 'k', '\n', '\x3', '\x2', '\x2', '\x2', 'l', 
		'm', '\x5', 'M', '\'', '\x2', 'm', 'n', '\x5', '/', '\x18', '\x2', 'n', 
		'o', '\x5', ')', '\x15', '\x2', 'o', 'p', '\x5', '\x43', '\"', '\x2', 
		'p', 'q', '\x5', ')', '\x15', '\x2', 'q', '\f', '\x3', '\x2', '\x2', '\x2', 
		'r', 'v', '\t', '\x2', '\x2', '\x2', 's', 'u', '\t', '\x3', '\x2', '\x2', 
		't', 's', '\x3', '\x2', '\x2', '\x2', 'u', 'x', '\x3', '\x2', '\x2', '\x2', 
		'v', 't', '\x3', '\x2', '\x2', '\x2', 'v', 'w', '\x3', '\x2', '\x2', '\x2', 
		'w', '\xE', '\x3', '\x2', '\x2', '\x2', 'x', 'v', '\x3', '\x2', '\x2', 
		'\x2', 'y', '{', '\t', '\x4', '\x2', '\x2', 'z', 'y', '\x3', '\x2', '\x2', 
		'\x2', '{', '|', '\x3', '\x2', '\x2', '\x2', '|', 'z', '\x3', '\x2', '\x2', 
		'\x2', '|', '}', '\x3', '\x2', '\x2', '\x2', '}', '\x10', '\x3', '\x2', 
		'\x2', '\x2', '~', '\x7F', '\a', ')', '\x2', '\x2', '\x7F', '\x80', '\n', 
		'\x5', '\x2', '\x2', '\x80', '\x81', '\a', ')', '\x2', '\x2', '\x81', 
		'\x12', '\x3', '\x2', '\x2', '\x2', '\x82', '\x83', '\a', '.', '\x2', 
		'\x2', '\x83', '\x14', '\x3', '\x2', '\x2', '\x2', '\x84', '\x85', '\a', 
		'\x30', '\x2', '\x2', '\x85', '\x16', '\x3', '\x2', '\x2', '\x2', '\x86', 
		'\x87', '\a', '?', '\x2', '\x2', '\x87', '\x18', '\x3', '\x2', '\x2', 
		'\x2', '\x88', '\x89', '\a', '#', '\x2', '\x2', '\x89', '\x1A', '\x3', 
		'\x2', '\x2', '\x2', '\x8A', '\x8B', '\a', '=', '\x2', '\x2', '\x8B', 
		'\x1C', '\x3', '\x2', '\x2', '\x2', '\x8C', '\x8D', '\a', ',', '\x2', 
		'\x2', '\x8D', '\x1E', '\x3', '\x2', '\x2', '\x2', '\x8E', '\x8F', '\t', 
		'\x6', '\x2', '\x2', '\x8F', '\x90', '\x3', '\x2', '\x2', '\x2', '\x90', 
		'\x91', '\b', '\x10', '\x2', '\x2', '\x91', ' ', '\x3', '\x2', '\x2', 
		'\x2', '\x92', '\x93', '\t', '\a', '\x2', '\x2', '\x93', '\"', '\x3', 
		'\x2', '\x2', '\x2', '\x94', '\x95', '\t', '\b', '\x2', '\x2', '\x95', 
		'$', '\x3', '\x2', '\x2', '\x2', '\x96', '\x97', '\t', '\t', '\x2', '\x2', 
		'\x97', '&', '\x3', '\x2', '\x2', '\x2', '\x98', '\x99', '\t', '\n', '\x2', 
		'\x2', '\x99', '(', '\x3', '\x2', '\x2', '\x2', '\x9A', '\x9B', '\t', 
		'\v', '\x2', '\x2', '\x9B', '*', '\x3', '\x2', '\x2', '\x2', '\x9C', '\x9D', 
		'\t', '\f', '\x2', '\x2', '\x9D', ',', '\x3', '\x2', '\x2', '\x2', '\x9E', 
		'\x9F', '\t', '\r', '\x2', '\x2', '\x9F', '.', '\x3', '\x2', '\x2', '\x2', 
		'\xA0', '\xA1', '\t', '\xE', '\x2', '\x2', '\xA1', '\x30', '\x3', '\x2', 
		'\x2', '\x2', '\xA2', '\xA3', '\t', '\xF', '\x2', '\x2', '\xA3', '\x32', 
		'\x3', '\x2', '\x2', '\x2', '\xA4', '\xA5', '\t', '\x10', '\x2', '\x2', 
		'\xA5', '\x34', '\x3', '\x2', '\x2', '\x2', '\xA6', '\xA7', '\t', '\x11', 
		'\x2', '\x2', '\xA7', '\x36', '\x3', '\x2', '\x2', '\x2', '\xA8', '\xA9', 
		'\t', '\x12', '\x2', '\x2', '\xA9', '\x38', '\x3', '\x2', '\x2', '\x2', 
		'\xAA', '\xAB', '\t', '\x13', '\x2', '\x2', '\xAB', ':', '\x3', '\x2', 
		'\x2', '\x2', '\xAC', '\xAD', '\t', '\x14', '\x2', '\x2', '\xAD', '<', 
		'\x3', '\x2', '\x2', '\x2', '\xAE', '\xAF', '\t', '\x15', '\x2', '\x2', 
		'\xAF', '>', '\x3', '\x2', '\x2', '\x2', '\xB0', '\xB1', '\t', '\x16', 
		'\x2', '\x2', '\xB1', '@', '\x3', '\x2', '\x2', '\x2', '\xB2', '\xB3', 
		'\t', '\x17', '\x2', '\x2', '\xB3', '\x42', '\x3', '\x2', '\x2', '\x2', 
		'\xB4', '\xB5', '\t', '\x18', '\x2', '\x2', '\xB5', '\x44', '\x3', '\x2', 
		'\x2', '\x2', '\xB6', '\xB7', '\t', '\x19', '\x2', '\x2', '\xB7', '\x46', 
		'\x3', '\x2', '\x2', '\x2', '\xB8', '\xB9', '\t', '\x1A', '\x2', '\x2', 
		'\xB9', 'H', '\x3', '\x2', '\x2', '\x2', '\xBA', '\xBB', '\t', '\x1B', 
		'\x2', '\x2', '\xBB', 'J', '\x3', '\x2', '\x2', '\x2', '\xBC', '\xBD', 
		'\t', '\x1C', '\x2', '\x2', '\xBD', 'L', '\x3', '\x2', '\x2', '\x2', '\xBE', 
		'\xBF', '\t', '\x1D', '\x2', '\x2', '\xBF', 'N', '\x3', '\x2', '\x2', 
		'\x2', '\xC0', '\xC1', '\t', '\x1E', '\x2', '\x2', '\xC1', 'P', '\x3', 
		'\x2', '\x2', '\x2', '\xC2', '\xC3', '\t', '\x1F', '\x2', '\x2', '\xC3', 
		'R', '\x3', '\x2', '\x2', '\x2', '\xC4', '\xC5', '\t', ' ', '\x2', '\x2', 
		'\xC5', 'T', '\x3', '\x2', '\x2', '\x2', '\x5', '\x2', 'v', '|', '\x3', 
		'\x2', '\x3', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace SimpleDatabase.Parsing.Antlr
